from logging.config import fileConfig
from sqlalchemy import engine_from_config, pool
from alembic import context
import os
import sys

# üß≠ –î–æ–¥–∞—î–º–æ –∫–æ—Ä—ñ–Ω—å –ø—Ä–æ—î–∫—Ç—É –¥–æ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —à–ª—è—Ö—É
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

# üß© –Ü–º–ø–æ—Ä—Ç—É—î–º–æ app –∑ run.py —Ç–∞ db –∑ –ø—Ä–æ—î–∫—Ç—É
from run import app
from onboarding_crm import db

# üìÑ Alembic Config object
config = context.config

# üß† –í–∫–∞–∑—É—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —à–ª—è—Ö –¥–æ alembic.ini (–Ω–∞ —Ä—ñ–≤–µ–Ω—å –≤–∏—â–µ)
alembic_ini_path = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'alembic.ini')
if os.path.exists(alembic_ini_path):
    fileConfig(alembic_ini_path)
else:
    print(f"‚ö†Ô∏è Warning: alembic.ini not found at {alembic_ini_path}")

# üóÇÔ∏è –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ metadata
target_metadata = db.metadata


def run_migrations_offline():
    """Run migrations in 'offline' mode."""
    context.configure(
        url=config.get_main_option("sqlalchemy.url"),
        target_metadata=target_metadata,
        literal_binds=True,
        dialect_opts={"paramstyle": "named"},
    )

    with context.begin_transaction():
        context.run_migrations()


def run_migrations_online():
    """Run migrations in 'online' mode."""
    config.set_main_option('sqlalchemy.url', app.config['SQLALCHEMY_DATABASE_URI'])
    connectable = engine_from_config(
        config.get_section(config.config_ini_section, {}),
        prefix="sqlalchemy.",
        poolclass=pool.NullPool,
    )

    with app.app_context():
        with connectable.connect() as connection:
            context.configure(
                connection=connection,
                target_metadata=target_metadata,
                compare_type=True,
            )

            with context.begin_transaction():
                context.run_migrations()


if context.is_offline_mode():
    run_migrations_offline()
else:
    run_migrations_online()