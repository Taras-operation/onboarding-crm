from logging.config import fileConfig
from sqlalchemy import pool
from alembic import context
import os
import sys

# üß≠ –î–æ–¥–∞—î–º–æ –∫–æ—Ä—ñ–Ω—å –ø—Ä–æ—î–∫—Ç—É –¥–æ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —à–ª—è—Ö—É
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

# üß© –Ü–º–ø–æ—Ä—Ç—É—î–º–æ Flask app —ñ SQLAlchemy db
from run import app
from onboarding_crm import db

# üìÑ Alembic Config object
config = context.config

# üß† –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—ñ–≤, —è–∫—â–æ —Ñ–∞–π–ª alembic.ini —ñ—Å–Ω—É—î
alembic_ini_path = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'alembic.ini')
if os.path.exists(alembic_ini_path):
    fileConfig(alembic_ini_path)
else:
    print(f"‚ö†Ô∏è Warning: alembic.ini not found at {alembic_ini_path}")

# üì¶ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è metadata –¥–ª—è autogenerate
target_metadata = db.metadata


def run_migrations_offline():
    """Run migrations in 'offline' mode."""
    url = app.config['SQLALCHEMY_DATABASE_URI']
    context.configure(
        url=url,
        target_metadata=target_metadata,
        literal_binds=True,
        dialect_opts={"paramstyle": "named"},
    )

    with context.begin_transaction():
        context.run_migrations()


def run_migrations_online():
    """Run migrations in 'online' mode."""
    with app.app_context():
        connectable = db.engine  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ Flask SQLAlchemy engine

        with connectable.connect() as connection:
            context.configure(
                connection=connection,
                target_metadata=target_metadata,
                compare_type=True,  # –í–∞–∂–ª–∏–≤–æ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∏–ø—ñ–≤ –∫–æ–ª–æ–Ω–æ–∫
            )

            with context.begin_transaction():
                context.run_migrations()


# üîÅ –í–∏–±—ñ—Ä —Ä–µ–∂–∏–º—É: online –∞–±–æ offline
if context.is_offline_mode():
    run_migrations_offline()
else:
    run_migrations_online()